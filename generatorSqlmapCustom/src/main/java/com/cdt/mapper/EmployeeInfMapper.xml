<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdt.mapper.EmployeeInfMapper" >
  <resultMap id="BaseResultMap" type="com.cdt.model.EmployeeInf" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="JOB_ID" property="jobId" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CARD_ID" property="cardId" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="INTEGER" />
    <result column="PARTY" property="party" jdbcType="VARCHAR" />
    <result column="RACE" property="race" jdbcType="VARCHAR" />
    <result column="EDUCATION" property="education" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="imgname" property="imgname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, password, DEPT_ID, JOB_ID, NAME, CARD_ID, PHONE, EMAIL, SEX, PARTY, RACE, EDUCATION, 
    CREATE_DATE, imgname
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdt.model.EmployeeInfExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_inf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_inf
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_inf
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdt.model.EmployeeInfExample" >
    delete from employee_inf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdt.model.EmployeeInf" >
    insert into employee_inf (ID, password, DEPT_ID, 
      JOB_ID, NAME, CARD_ID, 
      PHONE, EMAIL, SEX, 
      PARTY, RACE, EDUCATION, 
      CREATE_DATE, imgname)
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{jobId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{party,jdbcType=VARCHAR}, #{race,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{imgname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cdt.model.EmployeeInf" >
    insert into employee_inf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="jobId != null" >
        JOB_ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="cardId != null" >
        CARD_ID,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="party != null" >
        PARTY,
      </if>
      <if test="race != null" >
        RACE,
      </if>
      <if test="education != null" >
        EDUCATION,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="imgname != null" >
        imgname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="party != null" >
        #{party,jdbcType=VARCHAR},
      </if>
      <if test="race != null" >
        #{race,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="imgname != null" >
        #{imgname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdt.model.EmployeeInfExample" resultType="java.lang.Integer" >
    select count(*) from employee_inf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee_inf
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null" >
        JOB_ID = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null" >
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.party != null" >
        PARTY = #{record.party,jdbcType=VARCHAR},
      </if>
      <if test="record.race != null" >
        RACE = #{record.race,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        EDUCATION = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imgname != null" >
        imgname = #{record.imgname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee_inf
    set ID = #{record.id,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      JOB_ID = #{record.jobId,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=INTEGER},
      PARTY = #{record.party,jdbcType=VARCHAR},
      RACE = #{record.race,jdbcType=VARCHAR},
      EDUCATION = #{record.education,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      imgname = #{record.imgname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdt.model.EmployeeInf" >
    update employee_inf
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        JOB_ID = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        CARD_ID = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=INTEGER},
      </if>
      <if test="party != null" >
        PARTY = #{party,jdbcType=VARCHAR},
      </if>
      <if test="race != null" >
        RACE = #{race,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        EDUCATION = #{education,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="imgname != null" >
        imgname = #{imgname,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdt.model.EmployeeInf" >
    update employee_inf
    set password = #{password,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      JOB_ID = #{jobId,jdbcType=INTEGER},
      NAME = #{name,jdbcType=VARCHAR},
      CARD_ID = #{cardId,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=INTEGER},
      PARTY = #{party,jdbcType=VARCHAR},
      RACE = #{race,jdbcType=VARCHAR},
      EDUCATION = #{education,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      imgname = #{imgname,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>